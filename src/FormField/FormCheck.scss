
// //
// // Check/radio
// //

// .form-check {
//   display: block;
//   min-height: $form-check-min-height;
//   padding-left: $form-check-padding-start;
//   margin-bottom: $form-check-margin-bottom;

//   .form-check-input {
//     float: left;
//     margin-left: $form-check-padding-start * -1;
//   }
// }
$form-check-input-width: 1.5rem;
$form-check-input-bg: blue;
$form-check-input-border: green;
$form-check-input-focus-border: red;
$form-check-input-focus-box-shadow: 0 0 0 4px green;
$form-check-input-checked-bg-color: yellow;
$form-check-input-checked-border-color: yellow;
$form-check-input-indeterminate-bg-color: red;
$form-check-input-indeterminate-border-color: purple;

$form-check-checked-color: blue;
$form-check-indeterminate-color: blue;
$form-check-unchecked-color: rgba(0,0,0,1);
$form-check-disabled-opacity: gray;

$form-radio-checked-color: blue;
$form-radio-indeterminate-color: blue;
$form-radio-unchecked-color: rgba(0,0,0,1);
$form-radio-disabled-opacity: gray;


$form-check-input-checked-bg-image: url('data:image/svg+xml,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M21 3H3V21H21V3ZM10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z" fill="#{$form-check-checked-color}"/></svg>');
$form-check-input-unchecked-bg-image: url('data:image/svg+xml,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M19 5V19H5V5H19ZM21 3H3V21H21V3Z" fill="#{$form-check-unchecked-color}"/></svg>');
$form-check-input-indeterminate-bg-image: url('data:image/svg+xml,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M21 3H3V21H21V3ZM17 13H7V11H17V13Z" fill="#{$form-check-indeterminate-color}"/></svg>');

$form-check-radio-checked-bg-image: url('data:image/svg+xml,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20Z" fill="black"/>
<path d="M12 17C14.7614 17 17 14.7614 17 12C17 9.23858 14.7614 7 12 7C9.23858 7 7 9.23858 7 12C7 14.7614 9.23858 17 12 17Z" fill="black"/>
</svg>
');

$form-check-radio-unchecked-bg-image: url('data:image/svg+xml,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20Z" fill="black"/>
</svg>
');

$form-check-input-disabled-opacity: .5;
$form-check-label-disabled-opacity: .5;

.pgn__check-input {
  width: $form-check-input-width;
  height: $form-check-input-width;
  margin-top: ($line-height-base - $form-check-input-width) / 2; // line-height minus check height
  vertical-align: top;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  border: $form-check-input-border;
  appearance: none;
  // color-adjust: exact; // Keep themed appearance for print
  // @include transition($form-check-transition);

  &[type="checkbox"] {
    background-image: escape-svg($form-check-input-unchecked-bg-image);
    // @include border-radius($form-check-input-border-radius);
  }

  &[type="radio"] {
    background-image: escape-svg($form-check-radio-unchecked-bg-image);
    // stylelint-disable-next-line property-disallowed-list
    // border-radius: $form-check-radio-border-radius;
  }

  &:active {
    // filter: $form-check-input-active-filter;
  }

  &:focus {
    border-color: $form-check-input-focus-border;
    outline: 0;
    box-shadow: $form-check-input-focus-box-shadow;
  }

  &:checked {
    // background-color: $form-check-input-checked-bg-color;
    // border-color: $form-check-input-checked-border-color;

    &[type="checkbox"] {
      background-image: escape-svg($form-check-input-checked-bg-image);
    }

    &[type="radio"] {
      background-image: escape-svg($form-check-radio-checked-bg-image);
    }
  }

  &[type="checkbox"]:indeterminate {
    // background-color: $form-check-input-indeterminate-bg-color;
    // border-color: $form-check-input-indeterminate-border-color;
    background-image: escape-svg($form-check-input-indeterminate-bg-image);
  }

  &:disabled {
    pointer-events: none;
    filter: none;
    opacity: $form-check-input-disabled-opacity;
  }

  // Use disabled attribute in addition of :disabled pseudo-class
  // See: https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    ~ .form-check-label {
      opacity: $form-check-label-disabled-opacity;
    }
  }
}

.pgn__checkbox-group-options {
  display: flex;
  flex-direction: column;
  & > .pgn__checkbox {
    margin-right: 1rem;
    margin-bottom: .5rem;
  }
}
.pgn__checkbox-group-legend {
  font-size: inherit;
  color: inherit;
  margin-bottom: 0.5rem;
  display: block;
}


.pgn__form-input-text,
.pgn__form-input-select,
.pgn__form-input-textarea,
.pgn__form-input-slider,
.pgn__form-input-switch,
.pgn__form-input-check {

}
