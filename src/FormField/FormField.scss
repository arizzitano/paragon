// @import "variables";

$icon-width: 32px;
$input-bg: white;
$focus-color: $primary-500;
$focus-border-width: 2px;
$difference-focus-default-border-width: $focus-border-width - $input-border-width;

.pgn__input-decorator-group {
  position: relative;
  display: flex;
  flex-grow: 1;
  align-items: flex-start;

  &.has-floating-label {
    .form-control:not(:focus) {
      &::placeholder,
      &::-webkit-datetime-edit {
        opacity: 0;
      }
    }
  }

  &.has-prepended-node {
    .form-control {
      padding-left: calc(#{$input-padding-x} + #{$icon-width});
    }
    .form-control-lg {
      padding-left: calc(#{$input-padding-x-lg} + #{$icon-width});
    }
    .form-control-sm {
      padding-left: calc(#{$input-padding-x-sm} + #{$icon-width});
    }
  }

  &.has-appended-node {
    .form-control {
      padding-right: calc(#{$input-padding-x} + #{$icon-width});
    }
    .form-control-lg {
      padding-right: calc(#{$input-padding-x-lg} + #{$icon-width});
    }
    .form-control-sm {
      padding-right: calc(#{$input-padding-x-sm} + #{$icon-width});
    }
  }

  font-size: $input-font-size;
  line-height: $input-line-height;
  &.pgn__input-decorator-group-sm {
    font-size: $input-font-size-sm;
    line-height: $input-line-height-sm;
  }
  &.pgn__input-decorator-group-lg {
    font-size: $input-font-size-lg;
    line-height: $input-line-height-lg;
  }
}

.pgn__input-decorator {
  position: absolute;
  pointer-events: none;
  button {
    pointer-events: initial;
  }
  height: $input-height;
  min-width: $input-height;
  line-height: inherit;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: inherit;
  &.pgn__input-decorator-leading {
    left: 0;
    padding-left: $input-padding-x;
    padding-right: $input-padding-x / 2;
  }
  &.pgn__input-decorator-trailing {
    right: 0;
    padding-left: $input-padding-x / 2;
    padding-right: calc(#{$input-padding-y-sm} - #{2 * $input-border-width});
  }

  .pgn__input-decorator-group-lg & {
    height: $input-height-lg;
    min-width: $input-height-lg;
    &.pgn__input-decorator-leading {
      padding-left: $input-padding-x-lg;
      padding-right: $input-padding-x-lg / 2;
    }
    &.pgn__input-decorator-trailing {
      padding-left: $input-padding-x-lg / 2;
      padding-right: calc(#{$input-padding-y} - #{2 * $input-border-width});
    }
  }

  .pgn__input-decorator-group-sm & {
    height: $input-height-sm;
    min-width: $input-height-lg;
    &.pgn__input-decorator-leading {
      padding-left: $input-padding-x-sm;
      padding-right: $input-padding-x-sm / 2;
    }
    &.pgn__input-decorator-trailing {
      padding-left: $input-padding-x-sm / 2;
      padding-right: calc(#{$input-padding-y-sm} - #{2 * $input-border-width});
    }
  }
}

@mixin input-group-floating-label-initial(
  $padding-x,
  $padding-y,
  $line-height,
  $font-size,
  $border-width
) {
  padding: 0 $padding-x;
  .pgn__input-group-floating-label-content {
    padding-top: $padding-y;
    line-height: $line-height;
    font-size: $font-size;
  }
}
select.form-control {
  background: $custom-select-bg $custom-select-background;
  appearance: none;

}
@mixin input-group-floating-label-float(
  $padding-x,
  $padding-y,
  $line-height,
  $font-size,
  $border-width
) {
  .pgn__input-group-floating-label-text {
    $half-leading: ($line-height - 0.8) / 2;
    $percent-height-minus-no-bottom-leading: (
        ($line-height - $half-leading) / $line-height
      ) * 100%;
    transform: translateY(-$padding-y) scale(.75)  translateY(-$percent-height-minus-no-bottom-leading);
  }
}

.pgn__input-group-floating-label {
  position: absolute;
  left: $input-border-width;
  right: 0;
  display: flex;
  width: 100%;
  height: 100%;
  pointer-events: none;

  .pgn__input-group-floating-label-content {
    border-top: solid 2px transparent;
    position: relative;
    left: -0.5em;
  }
  .pgn__input-group-floating-label-text {
    transform-origin: left top;
    padding: 0 0.5em;
    transition: transform 150ms ease, background-color 150ms linear;
    background: transparent;
  }

  .has-leading-element & {
    .pgn__input-group-floating-label-text {
      transform: translateX(#{$icon-width});
    }
  }

  @include input-group-floating-label-initial(
    $input-padding-x,
    $input-padding-y,
    $input-line-height,
    $input-font-size,
    $input-border-width
  );
  .pgn__input-decorator-group-lg & {
    @include input-group-floating-label-initial(
      $input-padding-x-lg,
      $input-padding-y-lg,
      $input-line-height-lg,
      $input-font-size-lg,
      $input-border-width
    );
  }
  .pgn__input-decorator-group-sm & {
    @include input-group-floating-label-initial(
      $input-padding-x-sm,
      $input-padding-y-sm,
      $input-line-height-sm,
      $input-font-size-sm,
      $input-border-width
    );
  }

  .form-control:focus ~ &,
  .form-control.has-value ~ &,
  select.form-control ~ & {
    .pgn__input-group-floating-label-text {
      background-color: $input-bg;
    }
    @include input-group-floating-label-float(
      $input-padding-x,
      $input-padding-y,
      $input-line-height,
      $input-font-size,
      $input-border-width
    );
  }
  .float-label.pgn__input-decorator-group-lg & {
    @include input-group-floating-label-float(
      $input-padding-x-lg,
      $input-padding-y-lg,
      $input-line-height-lg,
      $input-font-size-lg,
      $input-border-width
    );
  }
  .float-label.pgn__input-decorator-group-sm & {
    @include input-group-floating-label-float(
      $input-padding-x-sm,
      $input-padding-y-sm,
      $input-line-height-sm,
      $input-font-size-sm,
      $input-border-width
    );
  }
}


.pgn__text-field-inline {
  display: flex;
  align-items: center;
}


.pgn__field-label {
  font-size: $input-font-size;
  &.pgn__field-label-inline {
    display: inline-block;
    margin: 0 1em 0 0;
  }
  &.pgn__field-label-lg {
    font-size: $input-font-size-lg;
  }
  &.pgn__field-label-sm {
    font-size: $input-font-size-sm;
  }
}

$test: red;
$custom-checkbox-indicator-icon-checked:        str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='#{$test}' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e"), "#", "%23");

.pgn__checkbox {
  display: inline-flex;
  align-items: center;
  position: relative;
  // $custom-checkbox-indicator-icon-checked:        str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='#{$custom-control-indicator-checked-color}' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e"), "#", "%23") !default;

  // background: $custom-checkbox-indicator-icon-checked;

  .pgn__checkbox-icon,
  .pgn__checkbox-input {
    display: block;
    width: $custom-control-indicator-size;
    height: $custom-control-indicator-size;
  }
  .pgn__checkbox-input {
    // position: absolute;
    // top: 0;
    // opacity: 0;
    appearance: none;
    border: solid 1px red;
    background: $custom-checkbox-indicator-icon-checked;
    // &:f
  }
  .pgn__checkbox-icon {
    display: none;
  }
  .pgn__checkbox-icon-checked,
  .pgn__checkbox-icon-indeterminate {
    color: $custom-control-indicator-checked-bg;
  }
  .pgn__checkbox-input:checked ~ .pgn__checkbox-icon-checked {
    display: block;
  }
  .pgn__checkbox-input:indeterminate ~ .pgn__checkbox-icon-indeterminate {
    display: block;
  }
  .pgn__checkbox-input:not(:checked):not(:indeterminate) ~ .pgn__checkbox-icon-unchecked {
    display: block;
  }

  .pgn__checkbox-input:focus ~ .pgn__checkbox-icon {
    outline: soild 2px red;
    box-shadow: $custom-control-indicator-focus-box-shadow;
  }

  .pgn__checkbox-label {
    margin-left: .5em;
//         background-image: escape-svg($form-check-input-checked-bg-image);
  }
}

.pgn__field-description {
  margin-top: .5rem;
  font-size: $small-font-size;
  display: flex;
  align-items: center;
  .pgn__icon {
    height: 1em;
    margin-right: .5em;
    width: 1em;
    display: inline-block;
  }
  & ~ .pgn__field-description {
    margin-top: .25rem;
  }
}
.pgn__field-description-valid {
  color: $success-500;
}
.pgn__field-description-invalid {
  color: $danger-500;
}
.pgn__field-description-warning {
  color: $gray-900;
}
.pgn__field-description-muted {
  color: $text-muted;
}
.pgn__field-description-criteria-empty {
  .pgn__icon {
    color: $text-muted;
  }
}

.pgn__field-description-criteria-invalid {
  .pgn__icon {
    color: $danger-500;
  }
}
.pgn__field-description-criteria-valid {
  .pgn__icon {
    color: $success-500;
  }
}


// //
// // Check/radio
// //

// .form-check {
//   display: block;
//   min-height: $form-check-min-height;
//   padding-left: $form-check-padding-start;
//   margin-bottom: $form-check-margin-bottom;

//   .form-check-input {
//     float: left;
//     margin-left: $form-check-padding-start * -1;
//   }
// }
$form-check-input-width: 1.5rem;
$form-check-input-bg: blue;
$form-check-input-border: green;
$form-check-input-focus-border: red;
$form-check-input-focus-box-shadow: 0 0 0 4px green;
$form-check-input-checked-bg-color: yellow;
$form-check-input-checked-border-color: yellow;
$form-check-input-indeterminate-bg-color: red;
$form-check-input-indeterminate-border-color: purple;

$form-check-checked-color: blue;
$form-check-indeterminate-color: blue;
$form-check-unchecked-color: rgba(0,0,0,1);
$form-check-disabled-opacity: gray;

$form-radio-checked-color: blue;
$form-radio-indeterminate-color: blue;
$form-radio-unchecked-color: rgba(0,0,0,1);
$form-radio-disabled-opacity: gray;


$form-check-input-checked-bg-image: url('data:image/svg+xml,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M21 3H3V21H21V3ZM10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z" fill="#{$form-check-checked-color}"/></svg>');
$form-check-input-unchecked-bg-image: url('data:image/svg+xml,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M19 5V19H5V5H19ZM21 3H3V21H21V3Z" fill="#{$form-check-unchecked-color}"/></svg>');
$form-check-input-indeterminate-bg-image: url('data:image/svg+xml,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M21 3H3V21H21V3ZM17 13H7V11H17V13Z" fill="#{$form-check-indeterminate-color}"/></svg>');

$form-check-radio-checked-bg-image: url('data:image/svg+xml,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20Z" fill="black"/>
<path d="M12 17C14.7614 17 17 14.7614 17 12C17 9.23858 14.7614 7 12 7C9.23858 7 7 9.23858 7 12C7 14.7614 9.23858 17 12 17Z" fill="black"/>
</svg>
');

$form-check-radio-unchecked-bg-image: url('data:image/svg+xml,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20Z" fill="black"/>
</svg>
');

$form-check-input-disabled-opacity: .5;
$form-check-label-disabled-opacity: .5;

.pgn__check-input {
  width: $form-check-input-width;
  height: $form-check-input-width;
  margin-top: ($line-height-base - $form-check-input-width) / 2; // line-height minus check height
  vertical-align: top;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  border: $form-check-input-border;
  appearance: none;
  // color-adjust: exact; // Keep themed appearance for print
  // @include transition($form-check-transition);

  &[type="checkbox"] {
    background-image: escape-svg($form-check-input-unchecked-bg-image);
    // @include border-radius($form-check-input-border-radius);
  }

  &[type="radio"] {
    background-image: escape-svg($form-check-radio-unchecked-bg-image);
    // stylelint-disable-next-line property-disallowed-list
    // border-radius: $form-check-radio-border-radius;
  }

  &:active {
    // filter: $form-check-input-active-filter;
  }

  &:focus {
    border-color: $form-check-input-focus-border;
    outline: 0;
    box-shadow: $form-check-input-focus-box-shadow;
  }

  &:checked {
    // background-color: $form-check-input-checked-bg-color;
    // border-color: $form-check-input-checked-border-color;

    &[type="checkbox"] {
      background-image: escape-svg($form-check-input-checked-bg-image);
    }

    &[type="radio"] {
      background-image: escape-svg($form-check-radio-checked-bg-image);
    }
  }

  &[type="checkbox"]:indeterminate {
    // background-color: $form-check-input-indeterminate-bg-color;
    // border-color: $form-check-input-indeterminate-border-color;
    background-image: escape-svg($form-check-input-indeterminate-bg-image);
  }

  &:disabled {
    pointer-events: none;
    filter: none;
    opacity: $form-check-input-disabled-opacity;
  }

  // Use disabled attribute in addition of :disabled pseudo-class
  // See: https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    ~ .form-check-label {
      opacity: $form-check-label-disabled-opacity;
    }
  }
}

.pgn__checkbox-group-options {
  display: flex;
  flex-direction: column;
  & > .pgn__checkbox {
    margin-right: 1rem;
    margin-bottom: .5rem;
  }
}
.pgn__checkbox-group-legend {
  font-size: inherit;
  color: inherit;
  margin-bottom: 0.5rem;
  display: block;
}


.pgn__form-input-text,
.pgn__form-input-select,
.pgn__form-input-textarea,
.pgn__form-input-slider,
.pgn__form-input-switch,
.pgn__form-input-check {

}


// .form-check-label {
//   color: $form-check-label-color;
//   cursor: $form-check-label-cursor;
// }

// //
// // Switch
// //

// .form-switch {
//   padding-left: $form-switch-padding-start;

//   .form-check-input {
//     width: $form-switch-width;
//     margin-left: $form-switch-padding-start * -1;
//     background-image: escape-svg($form-switch-bg-image);
//     background-position: left center;
//     @include border-radius($form-switch-border-radius);
//     @include transition($form-switch-transition);

//     &:focus {
//       background-image: escape-svg($form-switch-focus-bg-image);
//     }

//     &:checked {
//       background-position: $form-switch-checked-bg-position;

//       @if $enable-gradients {
//         background-image: escape-svg($form-switch-checked-bg-image), var(--#{$variable-prefix}gradient);
//       } @else {
//         background-image: escape-svg($form-switch-checked-bg-image);
//       }
//     }
//   }
// }

// .form-check-inline {
//   display: inline-block;
//   margin-right: $form-check-inline-margin-end;
// }

// .btn-check {
//   position: absolute;
//   clip: rect(0, 0, 0, 0);
//   pointer-events: none;

//   &[disabled],
//   &:disabled {
//     + .btn {
//       pointer-events: none;
//       filter: none;
//       opacity: $form-check-btn-check-disabled-opacity;
//     }
//   }
// }